sources:
  usb_intenso:
    ignore_paths:
      - cache
      - thumbnails
    path: "D:\\"
    disabled: true
  home_dir:
    ignore_paths:
      - AppData
    path: "C:\\Users\\John"
    disabled: true
  target_folder:
    ignore_paths:
      - debug/incremental
      - debug/deps
      - debug/build
    path: "target"
    disabled: true
  siege_clips:
    path: "A:\\Videos\\Tom Clancy's Rainbow Six  Siege"

targets:
  #external_hdd: "F:\\"
  test_target: "D:\\test"

# evaluated in order, first matching filter determines file group for a file
file_groups:
  ignore_hidden_files_and_folders: # ignore all files tarting with .
    sources: all
    filter:
      file_name_matches_regex: "^\\."
    rule: ignore
  videos:
    sources: all
    filter:
      all:
        - is_file
        - has_extension: [mp4, mkv]
    rule:
      copy_to:
        target: "test_target"
        path:
          - file_name: "Videos"
          - file_name_with_extension
  image_no_thumb: # copy all images with a size of 300+ to test_target's Image folder
    sources: all
    filter:
      all:
        - is_file
        - has_extension: [ png, jpg, jpeg ]
        - has_img_metadata # image metadata can be expensive to read, so put this filter as far down as possible
        - has_img_date_time # implies "has_img_metadata", and should be used if img_date_time is used in rule
        - img_size:
            min: 300
    rule:
      copy_to:
        target: "test_target"
        path:
          - file_name: "Images"
          - img_date_time: "%Y-%m"
          - img_date_time: "%d"
          - file_name_with_extension
  image_no_thumb_no_time: # also copy images without date / time info
    sources: all
    filter:
      all:
        - is_file
        - has_extension: [ png, jpg, jpeg ]
        - has_img_metadata # image metadata can be expensive to read, so put this filter as far down as possible
        - img_size:
            min: 300
    rule:
      copy_to:
        target: "test_target"
        path:
          - file_name: "Images"
          - file_extension
          - file_name_with_extension
  thumbnails: # copy thumbnails (all remaining images)
    sources: all
    filter:
      all:
        - is_file
        - has_extension: [ png, jpg, jpeg ]
        - has_img_metadata # image metadata can be expensive to read, so put this filter as far down as possible
    rule:
      copy_to:
        target: "test_target"
        path:
          - file_name: "Thumbnails"
          - file_extension
          - file_name_with_extension
  documents:
    sources: all
    filter:
      all:
        - is_file
        - any:
            - in_folder: "Documents"
            - has_extension: [ doc, docx, pdf ]
    rule:
      copy_to:
        target: "test_target"
        path:
          - file_name: "Documents"
          - created_time: "%Y-%m-%d"
          - file_name_with_extension
  json:
    sources: all
    filter:
      all:
        - is_file
        - has_extension: [ json ]
    rule:
      copy_to:
        target: "test_target"
        path:
          - file_name: "JSON"
          - created_time: "%Y-%m-%d"
          - file_name_with_extension
  misc: # match all files that had no other filter matching them (otherwise they would be ignored)
    sources: all
    filter: is_file
    rule:
      copy_to: # default would be "ignore" (if no file group would match)
        target: "test_target"
        path:
          - file_name: "Misc"
          - original_path
  traverse_folders: # match all folders that had no other filter matching them
    sources: all
    filter: is_dir
    rule: traverse # default is "traverse" (so this group could be deleted without any effect)
